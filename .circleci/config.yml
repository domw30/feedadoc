version: 2.1

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:2.7.0-buster-node
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: feedadoc
      PGPASSWORD: "password1"
      RAILS_ENV: test
  postgres: &postgres
    image: circleci/postgres:10-alpine
    environment:
      POSTGRES_USER: feedadoc
      POSTGRES_DB: feedadoc_test
      POSTGRES_PASSWORD: "password1"

orbs:
  heroku: circleci/heroku@1.0.1 # Invoke the Heroku orb

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - feedadoc-bundle-v2-{{ checksum "Gemfile.lock" }}
            - feedadoc-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: feedadoc-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          keys:
            - feedadoc-yarn-{{ checksum "yarn.lock" }}
            - feedadoc-yarn-
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          key: feedadoc-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
  test:
    parallelism: 3
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - feedadoc-bundle-v2-{{ checksum "Gemfile.lock" }}
            - feedadoc-bundle-v2-
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - restore_cache:
          keys:
            - feedadoc-yarn-{{ checksum "yarn.lock" }}
            - feedadoc-yarn-
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - run:
          command: |
            mkdir /tmp/test-results
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            RUBYOPT='-W:no-deprecated -W:no-experimental' bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  staging-deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          force: true
      - run:
          command: "heroku run -a $HEROKU_APP_NAME rake db:migrate"
  optional-staging-deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          force: true
      - run:
          command: "heroku run -a $HEROKU_APP_NAME rake db:migrate"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - staging-deploy:
          requires:
            - test
          filters:
            branches:
              only: master
      - optional-staging-deploy-approval:
          type: approval
          requires:
            - test
      - optional-staging-deploy:
          requires:
            - optional-staging-deploy-approval
